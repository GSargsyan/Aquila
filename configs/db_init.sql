-- CREATE DATABASE "aquila";
-- CREATE USER "aquila" WITH PASSWORD 'aquila2018';
-- GRANT ALL PRIVILEGES ON DATABASE aquila TO aquila;

/*
Index candidates:
rooms.joined_date
*/

CREATE TABLE levels (
	id SMALLINT PRIMARY KEY,
	exp_thru INT
);

CREATE TABLE countries (
	id SMALLINT PRIMARY KEY,
	name TEXT
);

CREATE TABLE rooms (
	id SERIAL PRIMARY KEY,
	player_id_list INTEGER ARRAY,
	is_running BOOLEAN
);

CREATE TYPE PLAYER_STATUS AS ENUM ('alive', 'suspended');

CREATE TABLE players (
	id SERIAL PRIMARY KEY,
	username TEXT,
	password TEXT,
	balance BIGINT,
	demo_balance INT,
	level_id SMALLINT REFERENCES levels,
	exp INT,
	wagered BIGINT,
	won BIGINT,
	lost BIGINT,
	status PLAYER_STATUS,
	chat_messages_count INT,
	bets_count INT,
	bets_won_count INT,
	country_id SMALLINT REFERENCES countries,
	registered_date TIMESTAMP,
	settings JSON,
	room_id SMALLINT REFERENCES rooms,
	last_checkup TIMESTAMP,
	is_online BOOLEAN
);

CREATE TABLE player_blocks (
	id SERIAL PRIMARY KEY,
	player_id INT REFERENCES players,
	block_date TIMESTAMP,
	unblock_date TIMESTAMP,
	reason SMALLINT
);

CREATE TYPE RELATION AS ENUM ('muted', 'voice_muted');

CREATE TABLE player_relations (
	player_id INT REFERENCES players,
	ref_player_id INT REFERENCES players,
	relation RELATION
);

CREATE TABLE feedbacks (
	id SERIAL PRIMARY KEY,
	player_id INT REFERENCES players,
	content TEXT,
	date TIMESTAMP,
	answered TIMESTAMP
);

CREATE TYPE ACTION AS ENUM ('login', 'logout');

CREATE TABLE action_log (
	id SERIAL PRIMARY KEY,
	player_id INT REFERENCES players,
	action ACTION,
	ip CIDR,
	date TIMESTAMP
);

CREATE TABLE rounds (
	id SERIAL PRIMARY KEY,
	room_id INT REFERENCES rooms,
	player_id_list INTEGER ARRAY,
	outcome SMALLINT,
	start_date TIMESTAMP,
	end_date TIMESTAMP
);

CREATE TABLE chat_messages (
	id BIGSERIAL PRIMARY KEY,
	sender_id INT REFERENCES players,
	room_id INT REFERENCES rooms,
	content TEXT,
	date TIMESTAMP
);

CREATE TABLE room_log (
	id SERIAL PRIMARY KEY,
	room_id INT REFERENCES rooms, 
	player_id INT REFERENCES players,
	entry_date TIMESTAMP,
	leave_date TIMESTAMP
);

CREATE TABLE bet_types (
	id TEXT PRIMARY KEY,
	winning_vals INTEGER ARRAY,
	payout SMALLINT
);

CREATE TABLE bets (
	id BIGSERIAL PRIMARY KEY,
	player_id INT REFERENCES players,
	round_id INT REFERENCES rounds,
	bet_on TEXT REFERENCES bet_types,
	amount BIGINT,
	is_real BOOLEAN
);

CREATE TABLE ip_blocks (
	id SERIAL PRIMARY KEY,
	ip CIDR,
	block_date TIMESTAMP,
	unblock_date TIMESTAMP,
	reason SMALLINT
);

-- Indices
CREATE INDEX rooms_is_running
ON rooms (is_running);


-- Static content

-- Insert 1000 rooms
INSERT INTO rooms (player_id_list, is_running) VALUES ('{}', FALSE);
INSERT INTO rooms (player_id_list, is_running)
SELECT tmp.player_id_list, tmp.is_running FROM
(SELECT player_id_list, is_running, generate_series(1, 999) FROM rooms) tmp;

INSERT INTO bet_types VALUES
('red', '{1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36}', 2),
('black', '{2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35}', 2),
('even', '{2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36}', 2),
('odd', '{1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35}', 2),
('low', '{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}', 2),
('high', '{19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36}', 2),
('col-1', '{1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34}', 3),
('col-2', '{2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35}', 3),
('col-3', '{3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36}', 3),
('doz-1', '{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}', 3),
('doz-2', '{13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24}', 3),
('doz-3', '{25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36}', 3),
('str-0', '{0}', 36),
('str-1', '{1}', 36),
('str-2', '{2}', 36),
('str-3', '{3}', 36),
('str-4', '{4}', 36),
('str-5', '{5}', 36),
('str-6', '{6}', 36),
('str-7', '{7}', 36),
('str-8', '{8}', 36),
('str-9', '{9}', 36),
('str-10', '{10}', 36),
('str-11', '{11}', 36),
('str-12', '{12}', 36),
('str-13', '{13}', 36),
('str-14', '{14}', 36),
('str-15', '{15}', 36),
('str-16', '{16}', 36),
('str-17', '{17}', 36),
('str-18', '{18}', 36),
('str-19', '{19}', 36),
('str-20', '{20}', 36),
('str-21', '{21}', 36),
('str-22', '{22}', 36),
('str-23', '{23}', 36),
('str-24', '{24}', 36),
('str-25', '{25}', 36),
('str-26', '{26}', 36),
('str-27', '{27}', 36),
('str-28', '{28}', 36),
('str-29', '{29}', 36),
('str-30', '{30}', 36),
('str-31', '{31}', 36),
('str-32', '{32}', 36),
('str-33', '{33}', 36),
('str-34', '{34}', 36),
('str-35', '{35}', 36),
('str-36', '{36}', 36),
('spl-1-2', '{1, 2}', 18),
('spl-2-3', '{2, 3}', 18),
('spl-4-5', '{4, 5}', 18),
('spl-5-6', '{5, 6}', 18),
('spl-7-8', '{7, 8}', 18),
('spl-8-9', '{8, 9}', 18),
('spl-10-11', '{10, 11}', 18),
('spl-11-12', '{11, 12}', 18),
('spl-13-14', '{13, 14}', 18),
('spl-14-15', '{14, 15}', 18),
('spl-16-17', '{16, 17}', 18),
('spl-17-18', '{17, 18}', 18),
('spl-19-20', '{19, 20}', 18),
('spl-20-21', '{20, 21}', 18),
('spl-22-23', '{22, 23}', 18),
('spl-23-24', '{23, 24}', 18),
('spl-25-26', '{25, 26}', 18),
('spl-26-27', '{26, 27}', 18),
('spl-28-29', '{28, 29}', 18),
('spl-29-30', '{29, 30}', 18),
('spl-31-32', '{31, 32}', 18),
('spl-32-33', '{32, 33}', 18),
('spl-34-35', '{34, 35}', 18),
('spl-35-36', '{35, 36}', 18),
('spl-1-4', '{1, 4}', 18),
('spl-4-7', '{4, 7}', 18),
('spl-7-10', '{7, 10}', 18),
('spl-10-13', '{10, 13}', 18),
('spl-13-16', '{13, 16}', 18),
('spl-16-19', '{16, 19}', 18),
('spl-19-22', '{19, 22}', 18),
('spl-22-25', '{22, 25}', 18),
('spl-25-28', '{25, 28}', 18),
('spl-28-31', '{28, 31}', 18),
('spl-31-34', '{31, 34}', 18),
('spl-2-5', '{2, 5}', 18),
('spl-5-8', '{5, 8}', 18),
('spl-8-11', '{8, 11}', 18),
('spl-11-14', '{11, 14}', 18),
('spl-14-17', '{14, 17}', 18),
('spl-17-20', '{17, 20}', 18),
('spl-20-23', '{20, 23}', 18),
('spl-23-26', '{23, 26}', 18),
('spl-26-29', '{26, 29}', 18),
('spl-29-32', '{29, 32}', 18),
('spl-32-35', '{32, 35}', 18),
('spl-3-6', '{3, 6}', 18),
('spl-6-9', '{6, 9}', 18),
('spl-9-12', '{9, 12}', 18),
('spl-12-15', '{12, 15}', 18),
('spl-15-18', '{15, 18}', 18),
('spl-18-21', '{18, 21}', 18),
('spl-21-24', '{21, 24}', 18),
('spl-24-27', '{24, 27}', 18),
('spl-27-30', '{27, 30}', 18),
('spl-30-33', '{30, 33}', 18),
('spl-33-36', '{33, 36}', 18),
('cor-1-2-4-5', '{1, 2, 4, 5}', 9),
('cor-2-3-5-6', '{2, 3, 5, 6}', 9),
('cor-4-5-7-8', '{4, 5, 7, 8}', 9),
('cor-5-6-8-9', '{5, 6, 8, 9}', 9),
('cor-7-8-10-11', '{7, 8, 10, 11}', 9),
('cor-8-9-11-12', '{8, 9, 11, 12}', 9),
('cor-10-11-13-14', '{10, 11, 13, 14}', 9),
('cor-11-12-14-15', '{11, 12, 14, 15}', 9),
('cor-13-14-16-17', '{13, 14, 16, 17}', 9),
('cor-14-15-17-18', '{14, 15, 17, 18}', 9),
('cor-16-17-19-20', '{16, 17, 19, 20}', 9),
('cor-17-18-20-21', '{17, 18, 20, 21}', 9),
('cor-19-20-22-23', '{19, 20, 22, 23}', 9),
('cor-20-21-23-24', '{20, 21, 23, 24}', 9),
('cor-22-23-25-26', '{22, 23, 25, 26}', 9),
('cor-23-24-26-27', '{23, 24, 26, 27}', 9),
('cor-25-26-28-29', '{25, 26, 28, 29}', 9),
('cor-26-27-29-30', '{26, 27, 29, 30}', 9),
('cor-28-29-31-32', '{28, 29, 31, 32}', 9),
('cor-29-30-32-33', '{29, 30, 32, 33}', 9),
('cor-31-32-34-35', '{31, 32, 34, 35}', 9),
('cor-32-33-35-36', '{32, 33, 35, 36}', 9);

-- TODO id-50 escape the quote
INSERT INTO countries VALUES
(1, 'Afghanistan'),
(2, 'Albania'),
(3, 'Algeria'),
(4, 'American Samoa'),
(5, 'Andorra'),
(6, 'Angola'),
(7, 'Anguilla'),
(8, 'Antigua & Barbuda'),
(9, 'Argentina'),
(10, 'Armenia'),
(11, 'Aruba'),
(12, 'Australia'),
(13, 'Austria'),
(14, 'Azerbaijan'),
(15, 'Bahamas, The'),
(16, 'Bahrain'),
(17, 'Bangladesh'),
(18, 'Barbados'),
(19, 'Belarus'),
(20, 'Belgium'),
(21, 'Belize'),
(22, 'Benin'),
(23, 'Bermuda'),
(24, 'Bhutan'),
(25, 'Bolivia'),
(26, 'Bosnia & Herzegovina'),
(27, 'Botswana'),
(28, 'Brazil'),
(29, 'British Virgin Is.'),
(30, 'Brunei'),
(31, 'Bulgaria'),
(32, 'Burkina Faso'),
(33, 'Burma'),
(34, 'Burundi'),
(35, 'Cambodia'),
(36, 'Cameroon'),
(37, 'Canada'),
(38, 'Cape Verde'),
(39, 'Cayman Islands'),
(40, 'Central African Rep.'),
(41, 'Chad'),
(42, 'Chile'),
(43, 'China'),
(44, 'Colombia'),
(45, 'Comoros'),
(46, 'Congo, Dem. Rep.'),
(47, 'Congo, Repub. of the'),
(48, 'Cook Islands'),
(49, 'Costa Rica'),
(50, 'Cote dIvoire'),
(51, 'Croatia'),
(52, 'Cuba'),
(53, 'Cyprus'),
(54, 'Czech Republic'),
(55, 'Denmark'),
(56, 'Djibouti'),
(57, 'Dominica'),
(58, 'Dominican Republic'),
(59, 'East Timor'),
(60, 'Ecuador'),
(61, 'Egypt'),
(62, 'El Salvador'),
(63, 'Equatorial Guinea'),
(64, 'Eritrea'),
(65, 'Estonia'),
(66, 'Ethiopia'),
(67, 'Faroe Islands'),
(68, 'Fiji'),
(69, 'Finland'),
(70, 'France'),
(71, 'French Guiana'),
(72, 'French Polynesia'),
(73, 'Gabon'),
(74, 'Gambia, The'),
(75, 'Gaza Strip'),
(76, 'Georgia'),
(77, 'Germany'),
(78, 'Ghana'),
(79, 'Gibraltar'),
(80, 'Greece'),
(81, 'Greenland'),
(82, 'Grenada'),
(83, 'Guadeloupe'),
(84, 'Guam'),
(85, 'Guatemala'),
(86, 'Guernsey'),
(87, 'Guinea'),
(88, 'Guinea-Bissau'),
(89, 'Guyana'),
(90, 'Haiti'),
(91, 'Honduras'),
(92, 'Hong Kong'),
(93, 'Hungary'),
(94, 'Iceland'),
(95, 'India'),
(96, 'Indonesia'),
(97, 'Iran'),
(98, 'Iraq'),
(99, 'Ireland'),
(100, 'Isle of Man'),
(101, 'Israel'),
(102, 'Italy'),
(103, 'Jamaica'),
(104, 'Japan'),
(105, 'Jersey'),
(106, 'Jordan'),
(107, 'Kazakhstan'),
(108, 'Kenya'),
(109, 'Kiribati'),
(110, 'Korea, North'),
(111, 'Korea, South'),
(112, 'Kuwait'),
(113, 'Kyrgyzstan'),
(114, 'Laos'),
(115, 'Latvia'),
(116, 'Lebanon'),
(117, 'Lesotho'),
(118, 'Liberia'),
(119, 'Libya'),
(120, 'Liechtenstein'),
(121, 'Lithuania'),
(122, 'Luxembourg'),
(123, 'Macau'),
(124, 'Macedonia'),
(125, 'Madagascar'),
(126, 'Malawi'),
(127, 'Malaysia'),
(128, 'Maldives'),
(129, 'Mali'),
(130, 'Malta'),
(131, 'Marshall Islands'),
(132, 'Martinique'),
(133, 'Mauritania'),
(134, 'Mauritius'),
(135, 'Mayotte'),
(136, 'Mexico'),
(137, 'Micronesia, Fed. St.'),
(138, 'Moldova'),
(139, 'Monaco'),
(140, 'Mongolia'),
(141, 'Montserrat'),
(142, 'Morocco'),
(143, 'Mozambique'),
(144, 'Namibia'),
(145, 'Nauru'),
(146, 'Nepal'),
(147, 'Netherlands'),
(148, 'Netherlands Antilles'),
(149, 'New Caledonia'),
(150, 'New Zealand'),
(151, 'Nicaragua'),
(152, 'Niger'),
(153, 'Nigeria'),
(154, 'N. Mariana Islands'),
(155, 'Norway'),
(156, 'Oman'),
(157, 'Pakistan'),
(158, 'Palau'),
(159, 'Panama'),
(160, 'Papua New Guinea'),
(161, 'Paraguay'),
(162, 'Peru'),
(163, 'Philippines'),
(164, 'Poland'),
(165, 'Portugal'),
(166, 'Puerto Rico'),
(167, 'Qatar'),
(168, 'Reunion'),
(169, 'Romania'),
(170, 'Russia'),
(171, 'Rwanda'),
(172, 'Saint Helena'),
(173, 'Saint Kitts & Nevis'),
(174, 'Saint Lucia'),
(175, 'St Pierre & Miquelon'),
(176, 'Saint Vincent and the Grenadines'),
(177, 'Samoa'),
(178, 'San Marino'),
(179, 'Sao Tome & Principe'),
(180, 'Saudi Arabia'),
(181, 'Senegal'),
(182, 'Serbia'),
(183, 'Seychelles'),
(184, 'Sierra Leone'),
(185, 'Singapore'),
(186, 'Slovakia'),
(187, 'Slovenia'),
(188, 'Solomon Islands'),
(189, 'Somalia'),
(190, 'South Africa'),
(191, 'Spain'),
(192, 'Sri Lanka'),
(193, 'Sudan'),
(194, 'Suriname'),
(195, 'Swaziland'),
(196, 'Sweden'),
(197, 'Switzerland'),
(198, 'Syria'),
(199, 'Taiwan'),
(200, 'Tajikistan'),
(201, 'Tanzania'),
(202, 'Thailand'),
(203, 'Togo'),
(204, 'Tonga'),
(205, 'Trinidad & Tobago'),
(206, 'Tunisia'),
(207, 'Turkey'),
(208, 'Turkmenistan'),
(209, 'Turks & Caicos Is'),
(210, 'Tuvalu'),
(211, 'Uganda'),
(212, 'Ukraine'),
(213, 'United Arab Emirates'),
(214, 'United Kingdom'),
(215, 'United States'),
(216, 'Uruguay'),
(217, 'Uzbekistan'),
(218, 'Vanuatu'),
(219, 'Venezuela'),
(220, 'Vietnam'),
(221, 'Virgin Islands'),
(222, 'Wallis and Futuna'),
(223, 'West Bank'),
(224, 'Western Sahara'),
(225, 'Yemen'),
(226, 'Zambia'),
(227, 'Zimbabwe');
